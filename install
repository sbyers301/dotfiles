#!/bin/sh

set -eu

bname="$(basename -- "$0")" || {
  bname="$0"
  printf '%s: basename failed\n' "${bname}" >&2
  exit 1
}

print_usage() (
printf 'usage: %s [-s source-dir] [-t target-dir]\n' "${bname}" >&2
)

sflag=''
tflag=''
while getopts 's:t:' name; do
  case "${name}" in
    s)
      sflag=1
      sval="${OPTARG}"
      ;;
    t)
      tflag=1
      tval="${OPTARG}"
      ;;
    *)
      print_usage
      exit 2
      ;;
  esac
done
shift $((OPTIND - 1))

if [ 0 -ne $# ]; then
  print_usage
  exit 2
fi

if [ -z "${sflag}" ]; then
  sval="$(dirname -- "$0" && printf 'x')" || {
    printf '%s: dirname failed\n' "${bname}" >&2
    exit 1
  }
  sval="${sval%??}" # strip trailing \nx
  
  if [ -z "${sval}" ]; then
    printf '%s: could not find dirname\n' "${bname}" >&2
    exit 1
  fi
fi

if [ -z "${tflag}" ]; then
  if [ -z "${HOME-}" ]; then
    printf '%s: could not find HOME directory\n' "${bname}" >&2
    exit 1
  fi
  tval="${HOME}"
fi

if ! [ -d "${sval}" ]; then
  printf '%s: %s is not a directory\n' "${bname}" "${sval}" >&2
  exit 1
fi
if ! [ -d "${tval}" ]; then
  printf '%s: %s is not a directory\n' "${bname}" "${tval}" >&2
  exit 1
fi

source_folder="${sval}"'/config-files'
if ! [ -d "${source_folder}" ]; then
  printf '%s: %s is not a directory\n' "${bname}" "${source_folder}" >&2
  exit 1
fi

\ls -A1 -- "${source_folder}" | while read -r entry; do
  entry_path="${source_folder}"/"${entry}"
  if ! [ -e "${entry_path}" ]; then
    printf '%s: could not find file %s\n' "${bname}" "${entry_path}" >&2
    exit 1
  fi

  if [ -f "${entry_path}" ]; then
    cp -- "${entry_path}" "${tval}" || {
      printf '%s: cp failed\n' "${bname}" >&2
      exit 1
    }
  elif [ -d "${entry_path}" ]; then
    "${entry_path}"/install -s "${entry_path}" -t "${tval}" || {
      printf '%s: recursive install failed in %s\n' "${bname}" "${entry_path}" >&2
      exit 1
    }
  else
    printf '%s: found irregular directory entry %s\n' \
      "${bname}" "${entry_path}" >&2
    exit 1
  fi
done || exit 1

printf '%s: installation successful\n' "${bname}" >&2
