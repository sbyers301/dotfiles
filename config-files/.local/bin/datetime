#!/bin/sh

set -eu

op_error=1
user_error=2
internal_error=3

warn() {
  printf '%s: %s\n' "${bname}" "$*" >&2
}

warn_printf() {
  if [ $# -lt 1 ]; then
    warn 'internal error: warn_printf: bad usage'
    exit 3
  fi

  (
  fmt_str="$1"
  if [ $# -eq 1 ]; then
    printf '%s: '"${fmt_str}"'\n' "${bname}" >&2
  else
    fmt_args=''
    is_first=true
    is_second=''
    for arg in "$@"; do
      if [ -n "${is_first}" ]; then
        is_first=''
        is_second=true
        continue
      fi
      if [ -n "${is_second}" ]; then
        is_second=''
        fmt_args="${arg}"
      else
        fmt_args="${fmt_args} ${arg}"
      fi
    done
    printf '%s: '"${fmt_str}"'\n' "${bname}" "${fmt_args}" >&2
  fi
  )
}

print_usage() {
  printf 'usage: %s [-h]\n' "${bname}" >&2
}

main() {
  bname="$(basename -- "$0")" || {
    bname="$0"
    warn 'basename failed'
  }

  while getopts ':h' c; do
    case "${c}" in
      h)
        print_usage
        exit 0
        ;;
      :)
        warn_printf 'missing option argument %s' "${OPTARG}"
        exit "${user_error}"
        ;;
      \?)
        warn_printf 'unrecognized option %s' "${OPTARG}"
        exit "${user_error}"
        ;;
      *)
        warn_printf 'internal error: unrecognized option %s' "${OPTARG}"
        exit "${internal_error}"
        ;;
    esac
  done

  shift $((OPTIND - 1))
  
  if [ $# -ne 0 ]; then
    print_usage
    exit "${user_error}"
  fi

  timestamp="$(date +'%Y-%m-%dT%T')" || {
    warn 'date failed'
    exit "${op_error}"
  }

  offset="$(utc-offset)" || {
    warn 'utc-offset failed'
    exit "${op_error}"
  }

  printf '%s%s\n' "${timestamp}" "${offset}"
}

main "$@"
